name: distributions release

on:
  push:
    branches:  [master]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-release:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [20.x]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Github checkout
        uses: actions/checkout@v4
      - name: Install rpm
        run: sudo apt-get install -y rpm
        if: matrix.os == 'ubuntu-latest'
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: npm ci
      - run: npm run package
      - name: Build app
        shell: bash
        run: ./scripts/make-distributions.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name:  artifacts-${{ matrix.os }}
          path: out/make/*
  release:
    needs: pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Github checkout
        uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
      - name: Generate changelog
        uses: jaywcjlove/changelog-generator@main
        id: changelog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: out/make/
          merge-multiple: true
      - name: Build Release
        uses: jaywcjlove/create-tag-action@main
        id: tag_release
        with:
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ steps.changelog.outputs.compareurl }}

            ${{ steps.changelog.outputs.changelog }}

      - name: Release App
        uses: "marvinpinto/action-automatic-releases@latest"
        if: steps.tag_release.outputs.successful
        with:
          prerelease: false
          automatic_release_tag: ${{ steps.tag_release.outputs.version }}
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            LICENSE
            out/make/**/*.{dmg,rpm,deb}
            out/make/**/*Setup.exe
